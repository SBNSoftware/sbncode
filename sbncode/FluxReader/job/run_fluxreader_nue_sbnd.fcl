# Driver fcl file for reading in gsimple files
# for SBND

#include "simulationservices_sbnd.fcl"
#include "fluxfilter_sbnd.fcl"
#include "eventweight_flux_sbn.fcl"

process_name: FluxReader

services:
{
  TFileService: { fileName: "flux_hist.root" }
  RandomNumberGenerator: {}
  TimeTracker:       {}
  FileCatalogMetadata:     @local::art_file_catalog_mc
  @table::sbnd_basic_services
  @table::sbnd_random_services
}


source:
{
  fileNames:        []
  module_type:	    FluxReader
  skipEvents:       0
  maxEvents:        -1
  inputType:        "gsimple"
  nBins:            200
  Elow:             0
  Ehigh:            10
  SelfIncrementRun: true
}

outputs:
{
 out1:
  {
    module_type: RootOutput
    fileName:    "fluxreader.root"
    compressionLevel: 1
    dataTier:    "simulated"
    SelectEvents: [ filter ]
  }
}

physics:
{
  producers:
  {
    rns: { module_type: "RandomNumberSaver" }
    fluxweight:  @local::sbn_eventweight_flux
  }

  filters:
  {
    fluxfilter: @local::flux_filter
  }

  analyzers:
  {
    fluxana: {
      module_type: "FluxReaderAna"
      Baseline: 11000 # cm, distance from detector to target position
      XShift: -73.78 # cm, detector shift along X w.r.t. beamline coordinate system
      NuOtherIntersectionZ: 49000 # cm
      # 49000 cm is ICARUS location in SBND coordinate system (600 - 110) m
      # 36000 cm is MicroBooNE location in SBND coordinate system (470 - 110) m
      ApplyPositionCuts: true
      XCut: 200 # cm
      YCut: 200 # cm
      RequestedNuPDGs: [12, -12] # Keep neutrinos with these PDGs
    }
  }

  filter: [ rns, fluxfilter, fluxweight ]
  ana: [ fluxana ]
  stream1: [ out1 ]
  trigger_paths: [ filter ]
  end_paths: [ ana, stream1 ]
  # end_paths: [ stream1 ]
}

physics.producers.fluxweight.generator_module_label: "flux"
physics.producers.fluxweight.weight_functions: @local::physics.producers.fluxweight.weight_functions_flux



