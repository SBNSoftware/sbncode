#include "services_microboone.fcl"
#include "microboone_eventweight_service.fcl"
#include "seedservice_microboone.fcl"
#include "eventweight_microboone.fcl"

process_name: EventWeight4to4aFix


#event weighting for switching between splines as well as CV
microboone_eventweight_Splines_and_CV: {
  module_type: "EventWeight"

  min_weight: 0.0
  max_weight: 100

  genie_central_values: {
    MaCCQE: 7.55 # GENIE knob setting, gives Ma = 1.18 GeV
    RPA_CCQE: 0.4 # 0 --> Nieves CCQE default, 1 --> RPA off
    NormCCMEC: 0.52 # GENIE knob setting, gives scaling factor of 1.26
    XSecShape_CCMEC: 0.22 # 0 --> Nieves CCMEC default, 1 --> GENIE empirical
  }

  genie_module_label: "generator"
  @table::microboone_eventweight_spline
  @table::microboone_eventweight_genie
}
microboone_eventweight_Splines_and_CV.weight_functions: [ splines_general, TunedCentralValue ]


services: {
  TimeTracker: {}
  MemoryTracker: {}
  RandomNumberGenerator: {}
  FileCatalogMetadata: @local::art_file_catalog_mc
  NuRandomService: @local::microboone_seedservice
  UBEventWeight: @local::microboone_eventweight_service
}

source: {
  module_type: RootInput
}

physics: {
 producers: {
   eventweight4to4aFix: @local::microboone_eventweight_Splines_and_CV
   rns: {
     module_type: "RandomNumberSaver"
   }
 }
 
 simulate: [ rns, eventweight4to4aFix ]
 stream1: [ out1 ]
 trigger_paths: [ simulate ]
 end_paths: [ stream1 ]
}

outputs: {
 out1: {
   module_type: RootOutput
   fileName: "%ifb_%tc_eventweight.root"
   dataTier: "simulated"
   compressionLevel: 1
 }
}

